
Class.cs - расширение C# классов

Переменные byte - как java, sbyte - только положительные значения
и так для всех

swich case как java, default если не один case не подошел, необходимо дописывать break
после каждого case

do {
i++
} while(i<10); - выполняется один раз 100 процентов, то есть выполнять пока что-то

List<int> ints = new List<int>(); - создание List-а
itts.Count() - подсчитывает кол-во элементов
ints.RemoveAt(1) - удаляет элемент по индексу
ints.Remove(1) - удаляет первый элемент по значению

1) В C# есть возможность использовать указалели, работать с неуправляемой памятью
2) C# предлагает богатые возможности работы с окнами и графическими интерфейсами
пользователя
3) В C# используется throw а не throws как в java (вроде нет)
4) Многопоточность отличается ключемыми словами

int[,] ints = new int[3,2] - массив с массивами, 3 - колчиество массивов,
2 - кол-во элементов в каждом массиве

float[] floats = { 2.12f, 33.22f, 123.45f };
            foreach (float f in floats) {
                Console.WriteLine(f);
                Console.WriteLine("   ");
            } - перечисление и вывод всех элементов в массиве

class Truck : Car - наследование в C#

Констректор дочернего класса с переданными параметрами класса родителя

public Car(int speed, int wheelsCount, isWorking, (из класса родителя)
 int passangers(из класса наследника)) : base (speed, wheelCount, isWorking) {
    this.passenger = passenger;
 }

Если для дочернего класса нужно изменить метод который уже существует в классе родителе
нужно обозначить в классе родителе метод как virtual, а в дочернем классе обозначить
модификатором override, И В ЭТОМ МЕТОДЕ можем вызвать на КЛЮЧЕВОМ СЛОВЕ base.getVaues(),
т.е. метод класса родителя и добавить в новый метод дочернего класса новую функциональность