package by.mozolevskij.pharmacy.example.learning.docker;

public class DockerPart5 {

    /**
     *
     * 43. О проекте
     * 44. В проекте будет работать 4 сервиса:
     * frontend, backend, DB, BD Manager (new)
     *
     * Нужно предоставить клиенту доступ к frontend-у
     * к DB Manager нужно предоставить возможность подключения извне,
     * это делается по HTTP протоколу
     *
     * 45. Нужно открыть доступ к сервису Backend, Frontend и DB Manager
     * (который будет работать с DB, как и Backend), на определенных портах
     *
     * У каждого сервиса будет свой порт
     * 1)Backend - 3000
     * 2)Frontend - 5000
     * 3)DB - 3306
     * 4)DB Manager (Adminer) - 8080
     *
     * Для работы нужно опубликовать ВНУТРЕННИЕ порты 1,2,4 делается это при помощи
     * ВНЕШНИХ портов с другими значениями 1 - 3333, 2 - 5555, 4 - 8888.
     *
     * 46. Цель - запустить прилжэение и продолжить его разработку
     * меняя данные (чаще всего так и используют)
     * Для этого:
     * 1) Создать Dockerfile для Frontend
     * 2) Создать Dockerfile для Backend
     * 3) Найти подходяшие образы для сервисов MySQL и Adminer
     * Это делается для создания образов
     * 4) Создание docker-compose.yml - в этом файле описывается 4 сервиса,
     * описывается настройка портов и томов, так же можно добавить переменные
     * среды для некоторых из сервисов
     * 5) Запустить все сервисы
     *
     * Файл docker-compose.yml:
     *
     * version: '3'
     *
     * services:
     *      frontend:
     *          ...
     *      api:
     *          ...
     *      mysql:
     *          ...
     *      adminer:
     *          ...
     *
     *          при помощи этих имен сервисы взаимодействуют, они общаются
     *          посредством этих имен
     *
     * 47.time-app - папка с приложением: api - back, front - front
     *
     * 48.Frontend
     *
     * 49.Backend
     *
     * */

}
