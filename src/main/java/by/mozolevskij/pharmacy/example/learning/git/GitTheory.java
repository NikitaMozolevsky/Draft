package by.mozolevskij.pharmacy.example.learning.git;

public class GitTheory {
    /**     ТЕОРИЯ
     *
     * Репозиторий - место где лежит код с его историей, откуда код можно вытянуть, и туда закоммититью
     * Вытягивание кода - check out, засовывание - commit
     * Реверт, Ролл-бэк - откат на предыдущую версию
     * Мердж - совмещение двух кодов, их синхронизация
     *
     *      SSH
     *
     * 1) SHH - защищенный протокол для удаленного доступа к другому компьютеру,
     * или SHH - командная строка на другом компьютере (сервере). Пример протокола (набора правил
     * известный обоим компьютерам): производим удаление у себя, команда постурает на другой комп,
     * там генерируется ответ или сообщение об ощибке
     * 2) SHH - секретный протокол, данные зашифрованы
     * 3) Предназначение SHH - работа с компьютером-сервером на котором будет размешен сайт
     * 4) По SHH ключу можно клонировть проект
     *
     * Git - VCS (Систетема контроля версий), GitHub - Хранилище
     *
     *      КОММАНДЫ
     *
     * Pull - перенос кода из хранилища в локальный репозиторий
     * Merge - Объеденение. Отправление кода из одной ветки в другую,
     * включает новый код, исправления ошибок
     *
     *      СОСТОЯНИЯ ФАЙЛОВ
     *
     * Состояния файлов в git: зафиксированный, измененный, подготовленный
     * Измененные - еще не закоммиченные,
     * Подготовленные - измененные, отмеченные для коммита,
     * Зафиксированные - закоммиченный файл.
     *
     *      ВЕТКА
     *
     * По умолчанию называется master. Перемещается каждый раз на последный созданный коммит.
     * Ответвление от основной ветки осуществляется для работы с определенной фичей
     *
     *      MERGE и REBASE, PULL
     *
     * merge - слияние (более простая комманда), rebase - перемещение
     * merge - слияние коммитов, создание одного (коммит-слияние)
     *
     * rebase - переписываение всех коммитов из 2-х веток в одну, выглядит как
     * все коммиты были закоммичены в одну ветку изначатьно
     *
     * загрузить последние еизменения с определенный ветки:
     * git pull --rebase
     *
     *      TAG
     *
     * Пометка какого-то важного момента (новая версия программы которую я создал).
     * Посмотреть список тегов: git tag --list
     *
     * Создать новый тег:
     * git tag -a v0.2 -m "new version 0.2"
     * */
}
