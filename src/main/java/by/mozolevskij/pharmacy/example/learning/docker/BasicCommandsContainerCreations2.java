package by.mozolevskij.pharmacy.example.learning.docker;

public class BasicCommandsContainerCreations2 {

    /**
     * !!!() - CMD!!!
     *
     * 9. ()docker version() инф. о клиенте и сервере
     * если выйти из docker desktop (DD), при попытке получить информацию ()docker version()
     * выведется информация только о КЛИЕНТЕ, сервис не запущен, проучается
     * КЛИЕНТ не смог подключиться к SERVICE, это означает что клиент может
     * подключатся как к локольному так и удаленному SERVICE
     *
     * ()docker ps -a() - показывает списк запущенных и остановленных контейнеров,
     * все контейнеры в D (DOCKER)
     * ()docker ps() - показывает только запущенные контейнеры
     * ()docker images() - показывает список локальных образов
     * 10. ()docker run hello-world() - создание и запуск контейнера на определенном образе
     * D сначала пытается найти образ с таким названием локально, если такого образа нет,
     * то D ищент этот образ на DH (Docker Hub), скачивает этот образ
     * hello-world - официальный образ, можно скачать с DH вручную,
     * ()docker pull hello-world() потом ()docker run hello-world()
     *
     * ()docker run hello-world: y(), y - можно указать тег, с которым надо скачать образ,
     * автоматически скачивается образ hello-world с тегом latest, он запускает контенйнер
     * который выводит в консоль текст, затем контейнер останавливается,
     * контенеру устанавливается ID и NAME
     *
     * 11. ()docker run busybox() - запуск busybox и завершение т.к. ничего не подключилось
     * к sh
     *
     * ()docker run -i -t (-it) busybox()
     * -i - интерактивный -t - терминал
     * сейчас мы попадаем внутрь контейнера, подключаемся к процессу sh
     *  ()ls(), ()ls -l(), ()ls -la(так же скрытые файлы) - если ввести эту команду, то выведутся файлы находящиеся в этом
     *  контейнере, компьютере
     *  ()hostname() - выведется имя контейнера совпадающее с его id
     *  ()hostname -t() - выведется ip-адресс контейнера
     *
     *  12.
     * */

}
