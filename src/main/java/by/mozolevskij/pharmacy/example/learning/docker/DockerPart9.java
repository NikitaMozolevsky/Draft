package by.mozolevskij.pharmacy.example.learning.docker;

public class DockerPart9 {

    /**
     *
     * 52. Dockerfile для Frontend
     *
     * Instance:
     *
     * FROM node:alpine - базовый образ
     * WORKDIR /app - отдельная папка внутнр образа
     * EXPOSE 3000 - информирует про порт, ничего не выполняет
     * , на котором работыает этот сервис внутри контейнера
     * (сама инструкция не влияет не на что)
     * COPY package*.json ./ - копируем в папку app (./) эти 2 файла (сокращенное название)
     * * - Wildcart
     * RUN npm install - команда для установки всех зависимостей, которые были в package*.json,
     * эти 2 этапа идут ранее, т.к. изменеие зависимостей происходит не часто, это эффективно
     * переиспользует слои , кторые были созданы в предыдущем построении образа
     * COPY . ./ - копирование всех файлов в app
     * CMD ["npm", "run", "dev"] - команда, которую нужно выполнить при создании контейнера
     * из образа, который будет создан на основании Dockerfile,
     * "dev" -  для динамического изменения сайта в процессе разработки
     *
     * 53. Инструкция
     *
     * 54. Создание Dockerfile в Frontend
     * ()docker build . -f Dockerfile_name(), . - путь к местоположению dockerfile
     * ()docker build . -f Dockerfile_name -t time-app-frontend() - дать имя образу
     * Создан новый образ
     *
     * 55. Создание контейнера на основании образа
     * ()docker run -p 3000:3000 time-app-frontend()
     * ()-p 3000:3000() - подключение к Frontend приложению, используя определенный порт,
     * в случае 3000:3000 - используем тот же порт на котором работает приложение
     * внутри контейнера
     * ()time-app-frontend() - нужно вставить для запуска приложения с подключением
     * вывода процесса непосредственно к терминалу, т.е. без ()-d(), тома
     * подключатся тоже не будут т.е. все необходимые для запуска файлы уже есть
     * time-app-frontend образе
     *
     * При вводе команды Секрвер был запущен на localhost:3000
     * Так же показан IP-адрес контейнера
     * Это приложение работает внутри контейнера в которм есть все необходимые
     * зависимости для запуска этого приложения
     *
     * Для того что-бы посмотреть что внутри контейнера нужно создать новый терминал
     * ()docker exec -it b501841cdd94 sh() - попал внутрь контейнера /app
     * ()ls -la() - увидеть все папки
     * В контейнере есть папка node_models, хотя я ее удалил, т.к. она была на
     * этапе создания образа
     * ()npm --version()
     * ()node --version() - узнать версии которые внутри контейнера
     *
     * */

}
